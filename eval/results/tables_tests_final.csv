Test ID,Test Name,URL/Source,Format,Status,Error Type,Details,Notes
1,Help Command,N/A,N/A,PASS,None,Successfully displayed help with options: --url --file --format --stdin -o,Command shows all available options including markdown/csv/json formats
2,Wikipedia Population JSON,https://en.wikipedia.org/wiki/List_of_countries_by_population,json,FAIL,Deserialization,API response structure mismatch - invalid type: integer `243` expected sequence at column 66,CLI expects rows as Vec<Vec<String>> but API returns rows as usize (integer count)
3,Wikipedia Population Markdown,https://en.wikipedia.org/wiki/List_of_countries_by_population,markdown,FAIL,Deserialization,Same deserialization error - invalid type: integer at line 1 column 66,Error occurs before format conversion during API response parsing
4,Wikipedia Population CSV,https://en.wikipedia.org/wiki/List_of_countries_by_population,csv,FAIL,Deserialization,Same deserialization error - invalid type: integer at line 1 column 66,Format parameter doesn't affect error as it occurs during response parsing
5,Simple HTML Table File,/tmp/simple_table.html,markdown,FAIL,Deserialization,Same deserialization error - invalid type: integer at line 1 column 64,Even simple 3x3 table fails due to API/CLI schema mismatch
6,API Health Check,http://localhost:8080/health,N/A,PASS,None,API server running and healthy - all dependencies operational,Server status: degraded due to worker service but core extraction working
7,WASM Module Build,N/A,N/A,PASS,None,Successfully built riptide_extractor_wasm.wasm (2.6MB),Located at target/wasm32-wasip2/release/riptide_extractor_wasm.wasm
8,API Server Startup,N/A,N/A,PASS,None,Server started on 0.0.0.0:8080 with all features initialized,Redis connected performance monitoring enabled browser pool initialized
9,API Simple Table Extract,POST /api/v1/tables/extract,json,PASS,None,Extracted 3x3 table perfectly - headers: [Name Age City] data preserved,Extraction time: 0ms - Response includes id rows(3) columns(3) headers data metadata
10,API Markdown Export,GET /api/v1/tables/{id}/export?format=markdown,markdown,PASS,None,Perfect markdown table formatting with pipe separators and alignment,Output: | Name | Age | City | with header separator row | --- | --- | --- |
11,API CSV Export,GET /api/v1/tables/{id}/export?format=csv,csv,PASS,None,Clean CSV output: Name Age City / Alice 30 New York / Bob 25 London,Proper comma separation no unnecessary escaping
12,Wikipedia Complex Extract,https://en.wikipedia.org/wiki/List_of_countries_by_population,json,PASS,None,Extracted 3 tables: T1(243x6) T2(14x2) T3(2x2) in 280ms,Primary table caption: List of countries and territories by total population
13,Wikipedia Markdown Export,243-row population table,markdown,PASS,None,Large table exported successfully - all 243 countries with 6 columns,Headers: Location | Population | % of world | Date | Source | Notes - Data preserved perfectly
14,Wikipedia CSV Export,243-row population table,csv,PASS,None,CSV export with proper escaping for formatted numbers and percentages,Numbers preserved: 1417492000 Percentages: 17.3% Dates: 1 Jul 2025 - All 243 rows

SUMMARY
Total Tests: 14
CLI Tests: 5 (1 PASS 4 FAIL) - 20% success rate
API Tests: 9 (9 PASS 0 FAIL) - 100% success rate
Overall: 10 PASS 4 FAIL - 71% success rate

ROOT CAUSE
The riptide tables CLI command has a critical schema mismatch with the API:
- API returns: {tables: [{id: string rows: integer columns: integer headers: array data: array}]}
- CLI expects: {tables: [{headers: array rows: array_of_arrays caption: string}]}
- Serde fails when trying to deserialize integer into Vec<Vec<String>>

VERDICT
✅ Table extraction engine: WORKING PERFECTLY
✅ API endpoints: FULLY FUNCTIONAL
❌ CLI command: COMPLETELY BROKEN
⚠️ Priority: P0 CRITICAL - Feature unusable via CLI

WORKAROUND
Use API directly:
1. POST /api/v1/tables/extract with HTML content
2. GET /api/v1/tables/{id}/export?format=markdown|csv for each table ID

Fix required in: /workspaces/eventmesh/crates/riptide-cli/src/commands/tables.rs
Update TableExtractResponse struct to match API response schema or use export endpoint
