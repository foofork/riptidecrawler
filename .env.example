# ============================================================================
# RipTide Environment Configuration
# ============================================================================
#
# This file contains all environment variables used by RipTide API, CLI, and
# associated services. Copy this file to `.env` and update with your values.
#
# NAMING CONVENTION:
# - All RipTide variables: RIPTIDE_*
# - Output directories: RIPTIDE_*_OUTPUT_DIR or RIPTIDE_OUTPUT_*_DIR
# - Service URLs: RIPTIDE_*_URL or *_URL
# - Timeouts: RIPTIDE_*_TIMEOUT_SECS or *_TIMEOUT
# - Limits: RIPTIDE_*_LIMIT or RIPTIDE_MAX_*
#
# For detailed documentation, see: docs/configuration/ENVIRONMENT_VARIABLES.md
# ============================================================================

# ============================================================================
# Output Directory Configuration
# ============================================================================

# Base output directory for all RipTide artifacts
RIPTIDE_OUTPUT_DIR=./riptide-output

# Subdirectories for different output types (optional overrides)
# These default to ${RIPTIDE_OUTPUT_DIR}/<subdir> if not specified
RIPTIDE_SCREENSHOTS_DIR=${RIPTIDE_OUTPUT_DIR}/screenshots
RIPTIDE_HTML_DIR=${RIPTIDE_OUTPUT_DIR}/html
RIPTIDE_PDF_DIR=${RIPTIDE_OUTPUT_DIR}/pdf
RIPTIDE_DOM_DIR=${RIPTIDE_OUTPUT_DIR}/dom
RIPTIDE_HAR_DIR=${RIPTIDE_OUTPUT_DIR}/har
RIPTIDE_REPORTS_DIR=${RIPTIDE_OUTPUT_DIR}/reports
RIPTIDE_CRAWL_DIR=${RIPTIDE_OUTPUT_DIR}/crawl
RIPTIDE_SESSIONS_DIR=${RIPTIDE_OUTPUT_DIR}/sessions
RIPTIDE_ARTIFACTS_DIR=${RIPTIDE_OUTPUT_DIR}/artifacts
RIPTIDE_TEMP_DIR=${RIPTIDE_OUTPUT_DIR}/temp
RIPTIDE_LOGS_DIR=${RIPTIDE_OUTPUT_DIR}/logs
RIPTIDE_CACHE_DIR=${RIPTIDE_OUTPUT_DIR}/cache

# ============================================================================
# CLI Configuration
# ============================================================================

# API endpoint URL (for CLI usage)
RIPTIDE_API_URL=http://localhost:8080

# API authentication key
RIPTIDE_API_KEY=your_api_key_here

# CLI operation mode: api_first, api_only, or direct
# - api_first: Try API first, fallback to direct
# - api_only: API only, fail if unavailable
# - direct: Direct extraction only (no API)
RIPTIDE_CLI_MODE=api_first

# Default output format: json, text, table, markdown
RIPTIDE_CLI_OUTPUT_FORMAT=text

# Enable verbose CLI output
RIPTIDE_CLI_VERBOSE=false

# WASM module path for CLI operations
RIPTIDE_WASM_PATH=./target/wasm32-wasi/release/riptide-extraction.wasm

# ============================================================================
# Core Services
# ============================================================================

# Redis connection URL for caching and persistence
REDIS_URL=redis://localhost:6379/0

# Headless browser service URL
HEADLESS_URL=http://localhost:9123

# API server host and port
RIPTIDE_API_HOST=0.0.0.0
RIPTIDE_API_PORT=8080

# ============================================================================
# Search Configuration
# ============================================================================

# Search backend: "serper" (default), "none", or "searxng"
SEARCH_BACKEND=serper

# Serper.dev API key (required when SEARCH_BACKEND=serper)
SERPER_API_KEY=your_serper_api_key_here

# SearXNG instance URL (required when SEARCH_BACKEND=searxng)
# SEARXNG_BASE_URL=http://localhost:8888

# Search operation timeout in seconds
SEARCH_TIMEOUT=30

# Enable URL parsing for None provider
SEARCH_ENABLE_URL_PARSING=true

# ============================================================================
# Performance & Resource Limits
# ============================================================================

# Maximum concurrent render operations
RIPTIDE_MAX_CONCURRENT_RENDERS=10

# Maximum concurrent PDF operations (semaphore limit)
RIPTIDE_MAX_CONCURRENT_PDF=2

# Maximum concurrent WASM instances
RIPTIDE_MAX_CONCURRENT_WASM=4

# Render timeout in seconds (hard cap: 3s recommended for performance)
RIPTIDE_RENDER_TIMEOUT=3

# PDF processing timeout in seconds
RIPTIDE_PDF_TIMEOUT=30

# WASM extraction timeout in seconds
RIPTIDE_WASM_TIMEOUT=10

# HTTP request timeout in seconds
RIPTIDE_HTTP_TIMEOUT=10

# Global operation timeout in seconds (fallback)
RIPTIDE_GLOBAL_TIMEOUT=30

# ============================================================================
# Rate Limiting
# ============================================================================

# Enable rate limiting
RIPTIDE_RATE_LIMIT_ENABLED=true

# Rate limit: requests per second per host
RIPTIDE_RATE_LIMIT_RPS=1.5

# Rate limit jitter factor (0.0-1.0)
RIPTIDE_RATE_LIMIT_JITTER=0.1

# Burst capacity per host
RIPTIDE_RATE_LIMIT_BURST_CAPACITY=3

# Rate limit window duration in seconds
RIPTIDE_RATE_LIMIT_WINDOW_SECS=60

# Maximum number of tracked hosts
RIPTIDE_RATE_LIMIT_MAX_HOSTS=10000

# ============================================================================
# Browser Pool Configuration
# ============================================================================

# Browser pool size (max instances: 3 recommended)
RIPTIDE_HEADLESS_POOL_SIZE=3

# Minimum browser pool size
RIPTIDE_HEADLESS_MIN_POOL_SIZE=1

# Browser idle timeout in seconds
RIPTIDE_HEADLESS_IDLE_TIMEOUT=300

# Browser health check interval in seconds
RIPTIDE_HEADLESS_HEALTH_CHECK_INTERVAL=60

# Maximum pages per browser instance
RIPTIDE_HEADLESS_MAX_PAGES_PER_BROWSER=10

# Browser restart threshold (failed operations)
RIPTIDE_HEADLESS_RESTART_THRESHOLD=5

# Enable browser recycling
RIPTIDE_HEADLESS_ENABLE_RECYCLING=true

# Browser launch timeout in seconds
RIPTIDE_HEADLESS_LAUNCH_TIMEOUT=30

# Maximum retries for browser operations
RIPTIDE_HEADLESS_MAX_RETRIES=3

# ============================================================================
# Memory Management
# ============================================================================

# Global memory limit in MB
RIPTIDE_MEMORY_LIMIT_MB=2048

# Maximum memory per request in MB
RIPTIDE_MEMORY_MAX_PER_REQUEST_MB=256

# Memory pressure detection threshold (0.0-1.0)
RIPTIDE_MEMORY_PRESSURE_THRESHOLD=0.85

# Enable automatic garbage collection
RIPTIDE_MEMORY_AUTO_GC=true

# GC trigger threshold in MB
RIPTIDE_MEMORY_GC_TRIGGER_MB=1024

# Memory monitoring interval in seconds
RIPTIDE_MEMORY_MONITORING_INTERVAL=30

# Enable memory leak detection
RIPTIDE_MEMORY_LEAK_DETECTION=true

# Memory cleanup threshold in MB
RIPTIDE_MEMORY_CLEANUP_THRESHOLD_MB=512

# ============================================================================
# PDF Processing Configuration
# ============================================================================

# Maximum concurrent PDF operations (2 semaphore requirement)
RIPTIDE_PDF_MAX_CONCURRENT=2

# PDF processing timeout in seconds
RIPTIDE_PDF_PROCESSING_TIMEOUT=30

# Maximum PDF file size in MB
RIPTIDE_PDF_MAX_FILE_SIZE_MB=100

# Enable PDF streaming processing
RIPTIDE_PDF_ENABLE_STREAMING=true

# PDF queue size
RIPTIDE_PDF_QUEUE_SIZE=50

# PDF priority queue timeout in seconds
RIPTIDE_PDF_QUEUE_TIMEOUT=60

# ============================================================================
# WASM Runtime Configuration
# ============================================================================

# WASM instances per worker (single instance per worker requirement)
RIPTIDE_WASM_INSTANCES_PER_WORKER=1

# WASM module timeout in seconds
RIPTIDE_WASM_MODULE_TIMEOUT=10

# Maximum WASM memory in MB
RIPTIDE_WASM_MAX_MEMORY_MB=128

# Enable WASM instance recycling
RIPTIDE_WASM_ENABLE_RECYCLING=false

# WASM instance health check interval in seconds
RIPTIDE_WASM_HEALTH_CHECK_INTERVAL=120

# Maximum operations per WASM instance
RIPTIDE_WASM_MAX_OPERATIONS_PER_INSTANCE=10000

# WASM instance restart threshold
RIPTIDE_WASM_RESTART_THRESHOLD=10

# WASM extractor module path
# WASM_EXTRACTOR_PATH=./target/wasm32-wasi/release/extractor.wasm

# ============================================================================
# LLM/AI Provider Configuration
# ============================================================================

# OpenAI Configuration
# OPENAI_API_KEY=sk-...
# OPENAI_BASE_URL=https://api.openai.com/v1

# Anthropic/Claude Configuration
# ANTHROPIC_API_KEY=sk-ant-...

# Azure OpenAI Configuration
# AZURE_OPENAI_KEY=your_azure_key
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com

# Ollama Configuration (local LLM)
# OLLAMA_BASE_URL=http://localhost:11434

# ============================================================================
# Telemetry & Observability
# ============================================================================

# Enable telemetry collection
TELEMETRY_ENABLED=true

# Service name for telemetry
TELEMETRY_SERVICE_NAME=riptide-api

# Service version (defaults to CARGO_PKG_VERSION)
# TELEMETRY_SERVICE_VERSION=1.0.0

# OpenTelemetry OTLP endpoint
# TELEMETRY_OTLP_ENDPOINT=http://localhost:4317

# Alternative OTEL endpoint
# OTEL_ENDPOINT=http://localhost:4317

# Telemetry exporter type: "otlp" or "stdout"
TELEMETRY_EXPORTER_TYPE=stdout

# Sampling ratio (0.0-1.0)
TELEMETRY_SAMPLING_RATIO=1.0

# Export timeout in seconds
TELEMETRY_EXPORT_TIMEOUT_SECS=30

# Maximum queue size
TELEMETRY_MAX_QUEUE_SIZE=2048

# Maximum export batch size
TELEMETRY_MAX_EXPORT_BATCH_SIZE=512

# ============================================================================
# Authentication & Security
# ============================================================================

# Comma-separated valid API keys
# API_KEYS=key1,key2,key3

# Require authentication (true/false)
REQUIRE_AUTH=false

# Enable HTTPS/TLS
# RIPTIDE_ENABLE_TLS=false

# TLS certificate path
# RIPTIDE_TLS_CERT_PATH=/path/to/cert.pem

# TLS key path
# RIPTIDE_TLS_KEY_PATH=/path/to/key.pem

# ============================================================================
# Spider/Crawler Configuration
# ============================================================================

# Enable spider/crawler functionality (set to true to enable deep crawling)
SPIDER_ENABLE=false

# Spider configuration (when enabled)
# Base URL for spider operations (required when SPIDER_ENABLE=true)
# SPIDER_BASE_URL=https://example.com

# Maximum crawl depth (default: 10)
SPIDER_MAX_DEPTH=3

# Maximum pages to crawl (default: 1000)
SPIDER_MAX_PAGES=100

# Concurrent requests (default: 4)
SPIDER_CONCURRENCY=4

# Request timeout in seconds (default: 30)
SPIDER_TIMEOUT_SECONDS=30

# Delay between requests in milliseconds (default: 500)
SPIDER_DELAY_MS=500

# Respect robots.txt (default: true)
SPIDER_RESPECT_ROBOTS=true

# User agent string (default: "RipTide Spider/1.0")
# SPIDER_USER_AGENT=RipTide Spider/1.0

# ============================================================================
# Enhanced Pipeline Configuration
# ============================================================================

# Enable enhanced processing pipeline
ENHANCED_PIPELINE_ENABLE=true

# Enhanced pipeline metrics
ENHANCED_PIPELINE_METRICS=true

# Enhanced pipeline debug logging
# ENHANCED_PIPELINE_DEBUG=true

# Pipeline timeouts (seconds)
# ENHANCED_PIPELINE_FETCH_TIMEOUT=10
# ENHANCED_PIPELINE_GATE_TIMEOUT=5
# ENHANCED_PIPELINE_WASM_TIMEOUT=5
# ENHANCED_PIPELINE_RENDER_TIMEOUT=3

# ============================================================================
# Worker Configuration
# ============================================================================

# Worker pool size
WORKER_POOL_SIZE=4

# Maximum batch size for worker operations
# WORKER_MAX_BATCH_SIZE=100

# Maximum concurrency for workers
# WORKER_MAX_CONCURRENCY=10

# Enable worker scheduler
# WORKER_ENABLE_SCHEDULER=true

# Worker timeout in seconds
# RIPTIDE_WORKER_TIMEOUT=60

# Worker retry attempts
# RIPTIDE_WORKER_MAX_RETRIES=3

# ============================================================================
# Cache & Persistence
# ============================================================================

# Cache TTL in seconds
CACHE_TTL=86400

# Cache default TTL in seconds
CACHE_DEFAULT_TTL_SECONDS=86400

# Enable compression for cache
ENABLE_COMPRESSION=true

# Enable multi-tenancy
ENABLE_MULTI_TENANCY=false

# Cache invalidation interval in seconds
# RIPTIDE_CACHE_INVALIDATION_INTERVAL=300

# Enable cache warming
# RIPTIDE_CACHE_WARMING_ENABLED=true

# ============================================================================
# Circuit Breaker Configuration
# ============================================================================

# Circuit breaker failure threshold (percentage 0-100)
CIRCUIT_BREAKER_FAILURE_THRESHOLD=50

# Circuit breaker timeout in milliseconds
CIRCUIT_BREAKER_TIMEOUT_MS=5000

# Circuit breaker minimum requests before opening
CIRCUIT_BREAKER_MIN_REQUESTS=5

# Circuit breaker recovery timeout in seconds
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=60

# ============================================================================
# Streaming Configuration
# ============================================================================

# Stream buffer size
STREAM_BUFFER_SIZE=8192

# Maximum stream buffer size
STREAM_BUFFER_MAX_SIZE=65536

# WebSocket maximum message size
WS_MAX_MESSAGE_SIZE=16777216

# WebSocket ping interval in seconds
WS_PING_INTERVAL=30

# Maximum concurrent streams
STREAM_MAX_CONCURRENT=100

# Default stream timeout in seconds
STREAM_DEFAULT_TIMEOUT=300

# Enable stream rate limiting
STREAM_RATE_LIMIT_ENABLED=true

# Stream rate limit (requests per second)
STREAM_RATE_LIMIT_RPS=10

# ============================================================================
# Development & Testing
# ============================================================================

# Logging level (error, warn, info, debug, trace)
RUST_LOG=info

# Enable development mode
# RIPTIDE_DEV_MODE=false

# Health check port (optional, defaults to main API port)
# HEALTH_CHECK_PORT=8081

# Git SHA for versioning (auto-populated in CI/CD)
# GIT_SHA=abc123

# Build timestamp (auto-populated in CI/CD)
# BUILD_TIMESTAMP=2024-01-01T00:00:00Z

# Test environment configuration
# TEST_REDIS_URL=redis://localhost:6379/15
# TEST_WASM_PATH=./test-wasm/extractor.wasm
# SKIP_PERSISTENCE_TESTS=true
# SKIP_REDIS_TESTS=true

# Test timeout multiplier
# TEST_TIMEOUT_MULTIPLIER=2.0

# Feature flags for testing
# RIPTIDE_FEATURE_PDF=true
# RIPTIDE_FEATURE_BENCHMARKS=true
# RIPTIDE_FEATURE_API_INTEGRATION=true

# ============================================================================
# Proxy Configuration
# ============================================================================

# HTTP/HTTPS proxy settings
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=http://proxy.example.com:8080
# NO_PROXY=localhost,127.0.0.1

# ============================================================================
# Resource Monitoring
# ============================================================================

# Enable resource monitoring
# RIPTIDE_RESOURCE_MONITORING=true

# Resource monitoring interval in seconds
# RIPTIDE_RESOURCE_MONITORING_INTERVAL=30

# Resource cleanup interval in seconds
# RIPTIDE_RESOURCE_CLEANUP_INTERVAL=60

# Resource health check interval in seconds
# RIPTIDE_RESOURCE_HEALTH_CHECK_INTERVAL=30

# ============================================================================
# Database Configuration (if applicable)
# ============================================================================

# Database URL
# DATABASE_URL=postgresql://user:password@localhost:5432/riptide

# Database pool size
# DATABASE_POOL_SIZE=10

# Database connection timeout in seconds
# DATABASE_TIMEOUT=30

# ============================================================================
# Backup & Recovery
# ============================================================================

# Enable automatic backups
# RIPTIDE_BACKUP_ENABLED=false

# Backup directory
# RIPTIDE_BACKUP_DIR=./backups

# Backup interval in hours
# RIPTIDE_BACKUP_INTERVAL_HOURS=24

# Backup retention days
# RIPTIDE_BACKUP_RETENTION_DAYS=7

# ============================================================================
# End of Configuration
# ============================================================================
