[package]
name = "riptide-facade"
version = "0.1.0"
edition.workspace = true
license.workspace = true
authors.workspace = true

[dependencies]
# Internal dependencies
riptide-types = { path = "../riptide-types" }
riptide-fetch = { path = "../riptide-fetch" }
riptide-extraction = { path = "../riptide-extraction" }
riptide-pdf = { path = "../riptide-pdf" }
riptide-cache = { path = "../riptide-cache" }
riptide-headless = { path = "../riptide-headless" }
riptide-engine = { path = "../riptide-engine" }
riptide-stealth = { path = "../riptide-stealth", optional = true }
riptide-monitoring = { path = "../riptide-monitoring", optional = true }

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# Async runtime
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true

# URL handling
url.workspace = true

# HTML parsing
scraper.workspace = true

# Browser automation
spider_chromiumoxide_cdp = { workspace = true }

[dev-dependencies]
tokio = { workspace = true, features = ["test-util"] }
wiremock.workspace = true
futures.workspace = true
scraper.workspace = true
spider_chromiumoxide_cdp = { workspace = true }

[lib]
path = "src/lib.rs"
