openapi: 3.0.0
info:
  title: RipTide API - Comprehensive Specification
  version: 1.1.0
  x-last-validated: "2025-10-17T07:50:00Z"
  description: '# RipTide Crawler API


    A high-performance web scraping and content extraction API with 95+ endpoints across
    15 categories.


    ## Phase 1: Core Crawling & Event System (11 endpoints)

    - `/crawl` - Batch URL crawling with adaptive gate system

    - `/crawl/stream`, `/crawl/sse`, `/crawl/ws` - Real-time streaming

    - `/deepsearch`, `/deepsearch/stream` - Web search integration

    - `/render` - Headless browser rendering

    - `/healthz`, `/metrics` - System health and Prometheus metrics


    ## Phase 2: Advanced Extraction (14 endpoints)

    - `/strategies/*` - Multi-strategy extraction (CSS, WASM, LLM, Regex)

    - `/pdf/*` - PDF processing with progress streaming

    - `/api/v1/tables/*` - Table extraction and export (CSV/Markdown)


    ## Phase 3: Enterprise Features (34 endpoints)

    - `/spider/*` - Deep crawling with frontier management (3)

    - `/stealth/*` - Stealth configuration and testing (4)

    - `/api/v1/llm/*` - LLM provider management (4)

    - `/sessions/*` - Session and cookie management (12)

    - `/workers/*` - Async job queue and scheduling (9)

    - `/monitoring/*` - Health monitoring and alerts (6)


    ## Architecture Highlights

    - **Dual-Path Pipeline**: Fast CSS + async AI enhancement

    - **Event-Driven**: Core event bus for monitoring

    - **Circuit Breaker**: Automatic failover for dependencies

    - **Adaptive Gate**: Smart routing (raw/probes/headless/cached)


    **Total: 95+ endpoints documented**

    '
  contact:
    name: RipTide API Support
    url: https://github.com/riptide/api
    email: support@riptide.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: http://localhost:8080
  description: Local development
- url: https://api.riptide.example.com
  description: Production
tags:
- name: Crawling
  description: Core crawling endpoints (5)
- name: Extraction
  description: Content extraction endpoints (2)
- name: Search
  description: Web search endpoints (4)
- name: Spider
  description: Deep crawling (3)
- name: Streaming
  description: Real-time streaming (4)
- name: Strategies
  description: Advanced extraction (2)
- name: PDF
  description: PDF processing (3)
- name: Stealth
  description: Stealth browsing (4)
- name: Tables
  description: Table extraction (2)
- name: LLM
  description: LLM providers (4)
- name: Sessions
  description: Session management (12)
- name: Workers
  description: Job queue (11)
- name: Browser
  description: Browser session management (4)
- name: Resources
  description: Resource monitoring (7)
- name: Monitoring
  description: Metrics & alerts (6)
- name: Health
  description: Health checks (6)
- name: Admin
  description: Admin endpoints (13)
paths:
  /healthz:
    get:
      operationId: health_check
      tags:
      - Health
      summary: System health check (basic)
      description: Basic health check for load balancers and Kubernetes probes
      responses:
        '200':
          description: Service healthy or degraded
        '503':
          description: Service unhealthy
  /api/v1/health:
    get:
      operationId: health_check_v1
      tags:
      - Health
      summary: Versioned health check (alias for /healthz)
      responses:
        '200':
          description: Service healthy or degraded
        '503':
          description: Service unhealthy
  /api/health/detailed:
    get:
      operationId: health_detailed
      tags:
      - Health
      summary: Detailed health diagnostics
      description: Comprehensive health check with all dependency status, system metrics, and build information
      responses:
        '200':
          description: Detailed health information
        '503':
          description: Service unhealthy
  /health/{component}:
    get:
      operationId: health_component
      tags:
      - Health
      summary: Component-specific health check
      description: Check health of specific component (redis, extractor, http_client, headless, spider, etc.)
      parameters:
      - name: component
        in: path
        required: true
        schema:
          type: string
          enum: [redis, extractor, http_client, headless, spider, resource_manager, streaming, worker_service, circuit_breaker]
        description: Component name to check
      responses:
        '200':
          description: Component healthy
        '404':
          description: Component not found
        '503':
          description: Component unhealthy
  /health/metrics:
    get:
      operationId: health_metrics_only
      tags:
      - Health
      summary: Health metrics endpoint
      description: System metrics only (CPU, memory, disk, etc.) without dependency checks
      responses:
        '200':
          description: System metrics
  /metrics:
    get:
      operationId: metrics_prometheus
      tags:
      - Health
      summary: Prometheus metrics
      responses:
        '200':
          description: Success
  /api/v1/metrics:
    get:
      operationId: metrics_prometheus_v1
      tags:
      - Health
      summary: Versioned Prometheus metrics (alias)
      responses:
        '200':
          description: Success
  /crawl:
    post:
      operationId: crawl_batch
      tags:
      - Crawling
      summary: Batch crawl URLs
      responses:
        '200':
          description: Success
  /api/v1/crawl:
    post:
      operationId: crawl_batch_v1
      tags:
      - Crawling
      summary: Versioned batch crawl (alias)
      responses:
        '200':
          description: Success
  /crawl/stream:
    post:
      operationId: crawl_stream_ndjson
      tags:
      - Streaming
      summary: Stream crawl results (NDJSON)
      responses:
        '200':
          description: Success
  /crawl/sse:
    post:
      operationId: crawl_stream_sse
      tags:
      - Streaming
      summary: Stream crawl results (SSE)
      responses:
        '200':
          description: Success
  /crawl/ws:
    get:
      operationId: crawl_stream_websocket
      tags:
      - Streaming
      summary: WebSocket crawl stream
      responses:
        '200':
          description: Success
  /deepsearch:
    post:
      tags:
      - Search
      summary: Deep search with extraction
      responses:
        '200':
          description: Success
      operationId: deepsearch_post
  /deepsearch/stream:
    post:
      tags:
      - Streaming
      summary: Stream search results
      responses:
        '200':
          description: Success
      operationId: deepsearch_stream_post
  /render:
    post:
      tags:
      - Crawling
      summary: Headless browser rendering
      responses:
        '200':
          description: Success
      operationId: render_post
  /api/v1/render:
    post:
      tags:
      - Crawling
      summary: Versioned headless rendering (alias)
      responses:
        '200':
          description: Success
      operationId: render_post_v1
  /extract:
    post:
      operationId: extract
      tags:
      - Extraction
      summary: Content extraction endpoint
      description: NEW v1.1 - Direct content extraction without crawling
      responses:
        '200':
          description: Extracted content
      operationId: extract_post
  /api/v1/extract:
    post:
      operationId: extract_v1
      tags:
      - Extraction
      summary: Versioned content extraction
      description: Primary extraction endpoint for v1.1
      responses:
        '200':
          description: Extracted content
      operationId: extract_post_v1
  /search:
    get:
      operationId: search
      tags:
      - Search
      summary: Web search endpoint
      description: NEW v1.1 - Web search functionality
      responses:
        '200':
          description: Search results
      operationId: search_get
  /api/v1/search:
    get:
      operationId: search_v1
      tags:
      - Search
      summary: Versioned web search
      description: Primary search endpoint for v1.1
      responses:
        '200':
          description: Search results
      operationId: search_get_v1
  /spider/crawl:
    post:
      tags:
      - Spider
      summary: Deep crawl with Spider
      responses:
        '200':
          description: Success
      operationId: spider_crawl_post
  /spider/status:
    post:
      tags:
      - Spider
      summary: Get spider status
      responses:
        '200':
          description: Success
      operationId: spider_status_post
  /spider/control:
    post:
      tags:
      - Spider
      summary: Control spider (stop/reset)
      responses:
        '200':
          description: Success
      operationId: spider_control_post
  /strategies/crawl:
    post:
      tags:
      - Strategies
      summary: Advanced extraction strategies
      responses:
        '200':
          description: Success
      operationId: strategies_crawl_post
  /strategies/info:
    get:
      tags:
      - Strategies
      summary: Get strategies info
      responses:
        '200':
          description: Success
      operationId: strategies_info_get
  /pdf/process:
    post:
      tags:
      - PDF
      summary: Process PDF file
      responses:
        '200':
          description: Success
      operationId: pdf_process_post
  /pdf/process-stream:
    post:
      tags:
      - PDF
      summary: Stream PDF processing
      responses:
        '200':
          description: Success
      operationId: pdf_process-stream_post
  /pdf/health:
    get:
      tags:
      - PDF
      summary: PDF processor health
      responses:
        '200':
          description: Success
      operationId: pdf_health_get
  /stealth/configure:
    post:
      tags:
      - Stealth
      summary: Configure stealth settings
      responses:
        '200':
          description: Success
      operationId: stealth_configure_post
  /stealth/test:
    post:
      tags:
      - Stealth
      summary: Test stealth effectiveness
      responses:
        '200':
          description: Success
      operationId: stealth_test_post
  /stealth/capabilities:
    get:
      tags:
      - Stealth
      summary: Get stealth capabilities
      responses:
        '200':
          description: Success
      operationId: stealth_capabilities_get
  /stealth/health:
    get:
      tags:
      - Stealth
      summary: Stealth service health
      responses:
        '200':
          description: Success
      operationId: stealth_health_get
  /api/v1/tables/extract:
    post:
      tags:
      - Tables
      summary: Extract tables from HTML
      responses:
        '200':
          description: Success
      operationId: api_v1_tables_extract_post
  /api/v1/tables/{id}/export:
    get:
      tags:
      - Tables
      summary: Export table (CSV/Markdown)
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Table identifier
      responses:
        '200':
          description: Success
      operationId: api_v1_tables_id_export_get
  /api/v1/llm/providers:
    get:
      tags:
      - LLM
      summary: List LLM providers
      responses:
        '200':
          description: Success
      operationId: api_v1_llm_providers_get
  /api/v1/llm/providers/switch:
    post:
      tags:
      - LLM
      summary: Switch LLM provider
      responses:
        '200':
          description: Success
      operationId: api_v1_llm_providers_switch_post
  /api/v1/llm/config:
    get:
      tags:
      - LLM
      summary: Get LLM config
      responses:
        '200':
          description: Success
      operationId: api_v1_llm_config_get
    post:
      tags:
      - LLM
      summary: Update LLM config
      responses:
        '200':
          description: Success
      operationId: api_v1_llm_config_post
  /sessions:
    post:
      tags:
      - Sessions
      summary: Create session
      responses:
        '200':
          description: Success
      operationId: sessions_post
    get:
      tags:
      - Sessions
      summary: List sessions
      responses:
        '200':
          description: Success
      operationId: sessions_get
  /sessions/stats:
    get:
      tags:
      - Sessions
      summary: Session statistics
      responses:
        '200':
          description: Success
      operationId: sessions_stats_get
  /sessions/cleanup:
    post:
      tags:
      - Sessions
      summary: Cleanup expired sessions
      responses:
        '200':
          description: Success
      operationId: sessions_cleanup_post
  /sessions/{session_id}:
    get:
      tags:
      - Sessions
      summary: Get session info
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_get
    delete:
      tags:
      - Sessions
      summary: Delete session
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_delete
  /sessions/{session_id}/extend:
    post:
      tags:
      - Sessions
      summary: Extend session TTL
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_extend_post
  /sessions/{session_id}/cookies:
    post:
      tags:
      - Sessions
      summary: Set cookie
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_cookies_post
    delete:
      tags:
      - Sessions
      summary: Clear all cookies
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_cookies_delete
  /sessions/{session_id}/cookies/{domain}:
    get:
      tags:
      - Sessions
      summary: Get domain cookies
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      - name: domain
        in: path
        required: true
        schema:
          type: string
        description: Cookie domain
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_cookies_domain_get
  /sessions/{session_id}/cookies/{domain}/{name}:
    get:
      tags:
      - Sessions
      summary: Get specific cookie
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      - name: domain
        in: path
        required: true
        schema:
          type: string
        description: Cookie domain
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: Cookie name
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_cookies_domain_name_get
    delete:
      tags:
      - Sessions
      summary: Delete cookie
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
        description: Session identifier
      - name: domain
        in: path
        required: true
        schema:
          type: string
        description: Cookie domain
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: Cookie name
      responses:
        '200':
          description: Success
      operationId: sessions_session_id_cookies_domain_name_delete
  /workers/jobs:
    post:
      tags:
      - Workers
      summary: Submit async job
      responses:
        '200':
          description: Success
      operationId: workers_jobs_post
    get:
      tags:
      - Workers
      summary: List all jobs
      description: Get list of all worker jobs with optional filtering
      responses:
        '200':
          description: Success
      operationId: workers_jobs_get
  /workers/jobs/{job_id}:
    get:
      tags:
      - Workers
      summary: Get job status
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: Job identifier
      responses:
        '200':
          description: Success
      operationId: workers_jobs_job_id_get
  /workers/jobs/{job_id}/result:
    get:
      tags:
      - Workers
      summary: Get job result
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: Job identifier
      responses:
        '200':
          description: Success
      operationId: workers_jobs_job_id_result_get
  /workers/stats/queue:
    get:
      tags:
      - Workers
      summary: Queue statistics
      responses:
        '200':
          description: Success
      operationId: workers_stats_queue_get
  /workers/stats/workers:
    get:
      tags:
      - Workers
      summary: Worker pool stats
      responses:
        '200':
          description: Success
      operationId: workers_stats_workers_get
  /workers/metrics:
    get:
      tags:
      - Workers
      summary: Worker metrics
      responses:
        '200':
          description: Success
      operationId: workers_metrics_get
  /workers/schedule:
    post:
      tags:
      - Workers
      summary: Create scheduled job
      responses:
        '200':
          description: Success
      operationId: workers_schedule_post
    get:
      tags:
      - Workers
      summary: List scheduled jobs
      responses:
        '200':
          description: Success
      operationId: workers_schedule_get
  /workers/schedule/{job_id}:
    delete:
      tags:
      - Workers
      summary: Delete scheduled job
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
        description: Scheduled job identifier
      responses:
        '200':
          description: Success
      operationId: workers_schedule_job_id_delete
  /monitoring/health-score:
    get:
      tags:
      - Monitoring
      summary: System health score (0-100)
      responses:
        '200':
          description: Success
      operationId: monitoring_health-score_get
  /monitoring/performance-report:
    get:
      tags:
      - Monitoring
      summary: Performance report
      responses:
        '200':
          description: Success
      operationId: monitoring_performance-report_get
  /monitoring/metrics/current:
    get:
      tags:
      - Monitoring
      summary: Current metrics snapshot
      responses:
        '200':
          description: Success
      operationId: monitoring_metrics_current_get
  /monitoring/alerts/rules:
    get:
      tags:
      - Monitoring
      summary: Alert rule definitions
      responses:
        '200':
          description: Success
      operationId: monitoring_alerts_rules_get
  /monitoring/alerts/active:
    get:
      tags:
      - Monitoring
      summary: Active alerts
      responses:
        '200':
          description: Success
      operationId: monitoring_alerts_active_get
  /pipeline/phases:
    get:
      tags:
      - Monitoring
      summary: Pipeline phase metrics
      responses:
        '200':
          description: Success
      operationId: pipeline_phases_get
  /api/v1/browser/session:
    post:
      tags:
      - Browser
      summary: Create browser session
      description: Create a new browser session with optional stealth configuration
      responses:
        '200':
          description: Browser session created
      operationId: browser_session_post
  /api/v1/browser/action:
    post:
      tags:
      - Browser
      summary: Execute browser action
      description: Execute an action on a browser session (navigate, screenshot, execute script, etc.)
      responses:
        '200':
          description: Action executed
      operationId: browser_action_post
  /api/v1/browser/pool/status:
    get:
      tags:
      - Browser
      summary: Get browser pool status
      description: Get current browser pool capacity and active sessions
      responses:
        '200':
          description: Browser pool status
      operationId: browser_pool_status_get
  /api/v1/browser/session/{id}:
    delete:
      tags:
      - Browser
      summary: Close browser session
      description: Close and cleanup a browser session
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Browser session ID
      responses:
        '200':
          description: Session closed
      operationId: browser_session_delete
  /resources/status:
    get:
      tags:
      - Resources
      summary: Get resource status
      description: Overall resource usage and availability
      responses:
        '200':
          description: Resource status
      operationId: resources_status_get
  /resources/browser-pool:
    get:
      tags:
      - Resources
      summary: Browser pool resources
      description: Browser pool resource metrics and availability
      responses:
        '200':
          description: Browser pool resources
      operationId: resources_browser_pool_get
  /resources/rate-limiter:
    get:
      tags:
      - Resources
      summary: Rate limiter status
      description: Current rate limiting status and quotas
      responses:
        '200':
          description: Rate limiter status
      operationId: resources_rate_limiter_get
  /resources/memory:
    get:
      tags:
      - Resources
      summary: Memory usage status
      description: System memory usage and availability
      responses:
        '200':
          description: Memory status
      operationId: resources_memory_get
  /resources/performance:
    get:
      tags:
      - Resources
      summary: Performance metrics
      description: System performance metrics (CPU, latency, throughput)
      responses:
        '200':
          description: Performance metrics
      operationId: resources_performance_get
  /resources/pdf/semaphore:
    get:
      tags:
      - Resources
      summary: PDF processing semaphore
      description: PDF processing resource availability
      responses:
        '200':
          description: PDF semaphore status
      operationId: resources_pdf_semaphore_get
  /fetch/metrics:
    get:
      tags:
      - Resources
      summary: Fetch engine metrics
      description: HTTP fetch engine performance metrics
      responses:
        '200':
          description: Fetch metrics
      operationId: fetch_metrics_get
  /admin/tenants:
    post:
      tags:
      - Admin
      summary: Create tenant
      description: Create a new tenant (requires persistence feature)
      responses:
        '200':
          description: Tenant created
      operationId: admin_tenants_post
    get:
      tags:
      - Admin
      summary: List tenants
      description: List all tenants
      responses:
        '200':
          description: Tenant list
      operationId: admin_tenants_get
  /admin/tenants/{id}:
    get:
      tags:
      - Admin
      summary: Get tenant details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      responses:
        '200':
          description: Tenant details
      operationId: admin_tenants_id_get
    put:
      tags:
      - Admin
      summary: Update tenant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      responses:
        '200':
          description: Tenant updated
      operationId: admin_tenants_id_put
    delete:
      tags:
      - Admin
      summary: Delete tenant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      responses:
        '200':
          description: Tenant deleted
      operationId: admin_tenants_id_delete
  /admin/cache/warm:
    post:
      tags:
      - Admin
      summary: Warm cache
      description: Preload cache with common data
      responses:
        '200':
          description: Cache warmed
      operationId: admin_cache_warm_post
  /admin/cache/stats:
    get:
      tags:
      - Admin
      summary: Cache statistics
      description: Get cache hit rates and statistics
      responses:
        '200':
          description: Cache stats
      operationId: admin_cache_stats_get
  /admin/state/reload:
    post:
      tags:
      - Admin
      summary: Reload state
      description: Reload application state from storage
      responses:
        '200':
          description: State reloaded
      operationId: admin_state_reload_post
