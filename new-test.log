   Compiling h2 v0.4.12
   Compiling cranelift-codegen v0.113.1
   Compiling tower v0.5.2
   Compiling wit-parser v0.218.1
   Compiling opentelemetry_sdk v0.26.0
   Compiling prost v0.13.5
   Compiling ittapi v0.4.0
   Compiling fxprof-processed-profile v0.6.0
   Compiling wit-component v0.215.0
   Compiling tower v0.4.13
   Compiling axum v0.7.9
   Compiling clap_builder v4.5.48
   Compiling compression-codecs v0.4.30
   Compiling tokio-rustls v0.26.3
   Compiling tokio-native-tls v0.3.1
   Compiling itertools v0.10.5
   Compiling hyper v1.7.0
   Compiling wasmtime-wit-bindgen v26.0.1
   Compiling wit-bindgen-rust v0.30.0
   Compiling tracing-log v0.2.0
   Compiling tracing-subscriber v0.3.20
   Compiling criterion-plot v0.5.0
   Compiling hyper-util v0.1.17
   Compiling tower-http v0.6.6
   Compiling selectors v0.30.0
   Compiling clap v4.5.48
   Compiling wasmtime-component-macro v26.0.1
   Compiling cookie_store v0.21.1
   Compiling cap-fs-ext v3.4.4
   Compiling system-interface v0.27.3
   Compiling wit-bindgen-rust-macro v0.30.0
   Compiling async-compression v0.4.30
   Compiling cap-time-ext v3.4.4
   Compiling hyper-timeout v0.5.2
   Compiling hyper-tls v0.6.0
   Compiling hyper-rustls v0.27.7
   Compiling tonic v0.12.3
   Compiling cap-net-ext v3.4.4
   Compiling futures v0.3.31
   Compiling tinytemplate v1.2.1
   Compiling combine v4.6.7
   Compiling pdfium-render v0.8.35
   Compiling reqwest v0.12.23
   Compiling criterion v0.5.1
   Compiling wit-bindgen v0.30.0
   Compiling lol_html v2.6.0
   Compiling tracing-opentelemetry v0.27.0
   Compiling tokio-test v0.4.4
   Compiling sysinfo v0.32.1
   Compiling opentelemetry-proto v0.26.1
   Compiling opentelemetry-otlp v0.26.0
   Compiling redis v0.26.1
   Compiling cranelift-native v0.113.1
   Compiling cranelift-frontend v0.113.1
   Compiling wasmtime-cranelift v26.0.1
   Compiling wasmtime v26.0.1
   Compiling wiggle v26.0.1
   Compiling wasmtime-wasi v26.0.1
   Compiling riptide-core v0.1.0 (/workspaces/eventmesh/crates/riptide-core)
error: multiple unused formatting arguments
   --> crates/riptide-core/src/telemetry.rs:586:19
    |
586 |                   $($key = sanitizer.sanitize(&$value.to_string())),*
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     argument never used
    |                     argument never used
    |
   ::: crates/riptide-core/src/fetch.rs:411:13
    |
411 | /             telemetry_info!(
412 | |                 "HTTP request completed",
    | |                 ------------------------ multiple missing formatting specifiers
413 | |                 "status_code" => status.as_u16().to_string(),
414 | |                 "duration_ms" => duration.as_millis().to_string()
415 | |             );
    | |_____________- in this macro invocation
    |
    = note: this error originates in the macro `telemetry_info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0425]: cannot find value `tracer_provider` in this scope
   --> crates/riptide-core/src/telemetry.rs:137:33
    |
137 |     global::set_tracer_provider(tracer_provider);
    |                                 ^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these functions
    |
  1 + use crate::telemetry::global::tracer_provider;
    |
  1 + use opentelemetry::global::tracer_provider;
    |

warning: unused import: `timeout`
 --> crates/riptide-core/src/memory_manager.rs:9:29
  |
9 | use tokio::time::{interval, timeout};
  |                             ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `sleep`
   --> crates/riptide-core/src/monitoring/collector.rs:326:23
    |
326 |     use tokio::time::{sleep, Duration};
    |                       ^^^^^

warning: unused import: `MonitoringConfig`
   --> crates/riptide-core/src/monitoring/reports.rs:218:56
    |
218 |     use crate::monitoring::metrics::{HealthThresholds, MonitoringConfig};
    |                                                        ^^^^^^^^^^^^^^^^

warning: unused import: `warn`
  --> crates/riptide-core/src/telemetry.rs:13:21
   |
13 | use tracing::{info, warn};
   |                     ^^^^

warning: unused import: `tracing_opentelemetry::OpenTelemetryLayer`
  --> crates/riptide-core/src/telemetry.rs:14:5
   |
14 | use tracing_opentelemetry::OpenTelemetryLayer;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `overall_start`
   --> crates/riptide-core/src/fetch.rs:277:13
    |
277 |         let overall_start = Instant::now();
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_overall_start`
    |
    = note: `#[warn(unused_variables)]` on by default

error[E0070]: invalid left-hand side of assignment
   --> crates/riptide-core/src/telemetry.rs:586:24
    |
586 |                   $($key = sanitizer.sanitize(&$value.to_string())),*
    |                          ^
    |
   ::: crates/riptide-core/src/fetch.rs:411:13
    |
411 | /             telemetry_info!(
412 | |                 "HTTP request completed",
413 | |                 "status_code" => status.as_u16().to_string(),
    | |                 ------------- cannot assign to this expression
414 | |                 "duration_ms" => duration.as_millis().to_string()
415 | |             );
    | |_____________- in this macro invocation
    |
    = note: this error originates in the macro `telemetry_info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0070]: invalid left-hand side of assignment
   --> crates/riptide-core/src/telemetry.rs:586:24
    |
586 |                   $($key = sanitizer.sanitize(&$value.to_string())),*
    |                          ^
    |
   ::: crates/riptide-core/src/fetch.rs:411:13
    |
411 | /             telemetry_info!(
412 | |                 "HTTP request completed",
413 | |                 "status_code" => status.as_u16().to_string(),
414 | |                 "duration_ms" => duration.as_millis().to_string()
    | |                 ------------- cannot assign to this expression
415 | |             );
    | |_____________- in this macro invocation
    |
    = note: this error originates in the macro `telemetry_info` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused variable: `in_use_instances`
   --> crates/riptide-core/src/memory_manager.rs:549:9
    |
549 |         in_use_instances: &Arc<RwLock<HashMap<String, TrackedWasmInstance>>>,
    |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_in_use_instances`

error[E0599]: no method named `is_ok` found for opaque type `impl futures::Future<Output = std::result::Result<extract::WasmExtractor, anyhow::Error>>` in the current scope
   --> crates/riptide-core/src/extract.rs:30:24
    |
 30 |         assert!(result.is_ok());
    |                        ^^^^^
    |
help: there is a method `inspect_ok` with a similar name, but with different arguments
   --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31/src/future/try_future/mod.rs:467:5
    |
467 | /     fn inspect_ok<F>(self, f: F) -> InspectOk<Self, F>
468 | |     where
469 | |         F: FnOnce(&Self::Ok),
470 | |         Self: Sized,
    | |____________________^
help: consider `await`ing on the `Future` and calling the method on its `Output`
    |
 30 |         assert!(result.await.is_ok());
    |                        ++++++

error[E0599]: no method named `expect` found for opaque type `impl futures::Future<Output = std::result::Result<extract::WasmExtractor, anyhow::Error>>` in the current scope
  --> crates/riptide-core/src/extract.rs:38:43
   |
38 |             WasmExtractor::new(wasm_path).expect("Should create extractor with valid WASM path");
   |                                           ^^^^^^ method not found in `impl futures::Future<Output = std::result::Result<extract::WasmExtractor, anyhow::Error>>`
   |
help: consider `await`ing on the `Future` and calling the method on its `Output`
   |
38 |             WasmExtractor::new(wasm_path).await.expect("Should create extractor with valid WASM path");
   |                                           ++++++

warning: unused import: `opentelemetry::trace::Tracer`
 --> crates/riptide-core/src/fetch.rs:4:5
  |
4 | use opentelemetry::trace::Tracer;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `guard`
  --> crates/riptide-core/src/monitoring/error.rs:57:21
   |
57 |                 let guard = poison_err.into_inner();
   |                     ^^^^^ help: if this is intentional, prefix it with an underscore: `_guard`

Some errors have detailed explanations: E0070, E0425, E0599.
For more information about an error, try `rustc --explain E0070`.
warning: `riptide-core` (lib test) generated 9 warnings
error: could not compile `riptide-core` (lib test) due to 6 previous errors; 9 warnings emitted
