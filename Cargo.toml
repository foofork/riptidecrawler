[workspace]
members = [
  "crates/riptide-core",
  "crates/riptide-html",
  "crates/riptide-search",
  "crates/riptide-api",
  "crates/riptide-headless",
  "crates/riptide-workers",
  "crates/riptide-intelligence",
  "crates/riptide-persistence",
  "wasm/riptide-extractor-wasm",
]
resolver = "2"

[workspace.package]
edition = "2021"
license = "Apache-2.0"
authors = ["RipTide Team"]

[workspace.dependencies]
anyhow = "1"
async-trait = "0.1"
axum = { version = "0.7", features = ["json", "ws"] }  # Keep 0.7 for stability
bytes = "1"
chrono = { version = "0.4", features = ["serde"] }
clap = { version = "4", features = ["derive", "env"] }
futures = "0.3"
http = "1"
hyper = { version = "1", features = ["full"] }
once_cell = "1"
rand = "0.8"
redis = { version = "0.26", features = ["tokio-comp"] }  # Updated from 0.25
reqwest = { version = "0.12", features = ["gzip", "brotli", "json", "cookies", "http2", "rustls-tls"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
thiserror = "1"
tokio = { version = "1", features = ["macros", "rt-multi-thread", "signal", "time", "fs", "process"] }
tokio-stream = "0.1"
tower = { version = "0.5", features = [] }  # Updated from 0.4
tower-http = { version = "0.6", features = ["trace", "cors", "compression-full", "decompression-full"] }  # Updated from 0.5
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }
opentelemetry = "0.26"
opentelemetry-otlp = "0.26"
opentelemetry_sdk = { version = "0.26", features = ["rt-tokio"] }
opentelemetry-semantic-conventions = "0.26"
tracing-opentelemetry = "0.27"
regex = "1.10"
sysinfo = "0.32"
psutil = "3.3"
url = "2"
uuid = { version = "1", features = ["v4", "serde"] }
lol_html = "2"  # Updated from 1
scraper = "0.20"
wasmtime = { version = "26", features = ["cache", "component-model"] }  # Keep 26 for compatibility
wasmtime-wasi = "26"
chromiumoxide = "0.7"  # Keep for stability
spider = "2"
pdfium-render = { version = "0.8", features = ["sync", "thread_safe"] }
env_logger = { version = "0.10" }
tempfile = { version = "3" }

# Performance optimization settings
[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 1
incremental = false  # Disable for release builds to improve optimization

# Development profile optimized for faster builds
[profile.dev]
opt-level = 0
debug = 2
incremental = true
codegen-units = 256  # More parallel compilation
split-debuginfo = "unpacked"  # Faster linking on supported platforms

# CI-optimized profile for faster builds in CI
[profile.ci]
inherits = "dev"
opt-level = 1
debug = 1
incremental = true
codegen-units = 16

# Fast compilation profile for development iteration
[profile.fast-dev]
inherits = "dev"
opt-level = 1
debug = 1
codegen-units = 512
incremental = true

# WASM-optimized build profile
[profile.wasm]
inherits = "release"
opt-level = "s"          # Optimize for size
lto = "fat"              # Full link-time optimization
codegen-units = 1        # Single codegen unit for better optimization
panic = "abort"          # Reduce binary size
strip = true             # Strip debug symbols
incremental = false      # Disable for better optimization

# WASM development profile for faster iteration
[profile.wasm-dev]
inherits = "dev"
opt-level = 1
lto = "off"
codegen-units = 4
panic = "abort"
incremental = true

# Build caching and workspace optimization
[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace.metadata.cargo-machete]
ignored = ["vergen"]  # Keep build dependencies

# Integration tests configuration

# Optional safety switch (leave commented by default):
# [patch.crates-io]
# trek-rs = { git = "https://github.com/officialunofficial/trek.git", rev = "PUT_A_PINNED_COMMIT" }

