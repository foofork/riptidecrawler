# Security and license checking configuration

[licenses]
confidence-threshold = 0.8
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "CC0-1.0",
    "Zlib",
    "MPL-2.0",
    "Unicode-3.0",
    "Unicode-DFS-2016",
    "0BSD",
]

[bans]
multiple-versions = "warn"
wildcards = "allow"
highlight = "all"
# Allow some common duplicates during transition periods
skip = [
    # These duplicates will be resolved via cargo update
]

[advisories]
db-path = "~/.cargo/advisory-db"
db-urls = ["https://github.com/rustsec/advisory-db"]
# Updated configuration per cargo-deny 0.16+ migration
# Ignore unmaintained crate advisories for transitive dependencies
# These are informational only and cannot be easily replaced without
# updating or replacing the parent dependencies
ignore = [
    "RUSTSEC-2025-0052",  # async-std unmaintained - pulled by chromiumoxide & httpmock
                          # Replacement strategy: Update chromiumoxide or switch to alternatives
                          # Note: async-std is only used by headless browsing deps
    "RUSTSEC-2024-0436",  # paste unmaintained - pulled by jemalloc-ctl & rav1e
                          # Replacement: pastey (but deeply nested dependency)
                          # Low risk: proc-macro only, no runtime impact
    "RUSTSEC-2025-0057",  # fxhash unmaintained - pulled by wasmtime's fxprof-processed-profile
                          # Replacement: rustc-hash (requires upstream update)
                          # Low risk: only used in wasmtime profiling tools
]
# severity-threshold replaced with severity in cargo-deny 0.16+
# See: https://github.com/EmbarkStudios/cargo-deny/pull/611
# Use advisory severity levels to filter: low, medium, high, critical
# Remove this deprecated key and use advisory-level filtering instead

[sources]
unknown-registry = "warn"
unknown-git = "warn"
allow-registry = ["https://github.com/rust-lang/crates.io-index"]