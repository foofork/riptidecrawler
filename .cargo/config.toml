# Cargo configuration for WASM Component Model builds
# Enhanced configuration for RipTide WASM components

[build]
# Default target for development builds
target-dir = "target"
jobs = 8
incremental = true

[target.x86_64-unknown-linux-gnu]
rustflags = [
    "-C", "split-debuginfo=packed",
    "-C", "target-cpu=native"
]

[target.wasm32-wasip2]
# Use wasmtime as the runner for testing WASM components
runner = "wasmtime run --wasm component-model --allow-unknown-exports"

# Linker configuration for optimal WASM builds
linker = "rust-lld"

[target.wasm32-wasip1]
# Configuration for WASI Preview 1 builds (legacy compatibility)
runner = "wasmtime run --allow-unknown-exports"

[env]
# Optimize for size and enable SIMD for WASM targets
RUSTFLAGS = "-C target-feature=+simd128 -C opt-level=s -C lto=fat -C codegen-units=1"

# Component model specific flags
WASM_COMPONENT_MODEL = "1"

# Enable trek-rs features for content extraction
TREK_FEATURES = "full"

[net]
# Use sparse registry for faster dependency resolution
git-fetch-with-cli = true
retry = 3

[registries.crates-io]
protocol = "sparse"

[profile.dev]
opt-level = 0
debug = 0
split-debuginfo = "packed"
incremental = true
overflow-checks = false

[profile.test]
opt-level = 0
debug = 0
incremental = true

[profile.bench]
opt-level = 3
lto = "thin"

[profile.release-wasm]
# Optimized profile specifically for WASM builds
inherits = "release"
opt-level = "s"          # Optimize for size
lto = true              # Enable link-time optimization
codegen-units = 1       # Single codegen unit for better optimization
panic = "abort"         # Reduce binary size by aborting on panic
strip = true           # Strip debug symbols

[profile.dev-wasm]
# Development profile for faster WASM builds
inherits = "dev"
opt-level = 1          # Some optimization for better performance
debug = 1             # Reduced debug info for smaller binaries

# Test parallelization settings for improved test performance
[test]
parallel = true
jobs = 8               # Use 8 CPU cores for balance
timeout = 600          # 10 minute timeout for long-running tests